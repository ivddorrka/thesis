# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=x500 
startup_window: core
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=forest gui:=true
        - waitForControl; gz camera -c gzclient_camera -f $UAV_NAME; history -s gz camera -c gzclient_camera -f $UAV_NAME
  - status:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-ouster --ouster-model OS0-128 --use-gpu-ray --enable-realsense-front --enable-realsense-front --pos 0 0 1.0 0"
          #- waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-realsense-front --enable-ouster --ouster-model OS0-128 --use-gpu-ray --pos 0 0 1.0 0"
  - vio_data:
      layout: tiled
      panes:
        - waitForHw; rosrun rqt_image_view rqt_image_view /$UAV_NAME/front_rgbd/color/image_raw
          #- waitForHw; rosrun rqt_image_view rqt_image_view /$UAV_NAME/front_rgbd/aligned_depth_to_color/image_raw

  - hw_api:
      layout: tiled
      panes:
        - waitForTime; roslaunch mrs_uav_px4_api api.launch
  - core:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
  - image_mmask:
      layout: tiled
      panes:
        - waitForHw; roslaunch image_modemask_processor image_masking_processor_launch_file.launch
  - point_processing:
      layout: tiled
      panes:
        - waitForHw; roslaunch point_processing point_processing.launch
  - mapplan:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_octomap_mapping_planning mapplan.launch
          config_octomap_server:=./config/octomap_server.yaml
          config_octomap_planner:=./config/octomap_planner.yaml
          config_pcl_filter_ouster:=./config/ouster_filter_mapping.yaml
          config_pcl_filter_rs_front:=./config/rs_front_filter.yaml
          config_pcl_filter_rs_down:=./config/rs_down_filter.yaml
          standalone:=true
          config_octomap_visualizer:=./config/octomap_visualizer.yaml
  - takeoff:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - 'waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
  - goto:
      layout: tiled
      panes:
        - 'history -s rosservice call /$UAV_NAME/octomap_planner/goto \"goal: \[0.0, 60.0, 2.0, 0.0\]\"'
  - rviz:
      layout: tiled
      panes:
        - waitForControl; rosrun rviz rviz -d ./rviz.rviz
        - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
        - waitForTime; waitForControl; roslaunch mrs_rviz_plugins rviz_interface.launch rviz_topic_name:='/move_base_simple/goal' reference_service_name:="/$UAV_NAME/octomap_planner/reference"
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 4; ~/.i3/layout_manager.sh ./layout.json
